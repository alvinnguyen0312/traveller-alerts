{"version":3,"sources":["Project1/theme.js","Project1/alertcomponents.js","Project1/advisoryaddcomponent.js","Project1/advisorylistcomponent.js","Project1/home.js","Project1/App.js","index.js"],"names":["createMuiTheme","typography","useNextVariants","palette","AlertComponent","useReducer","state","newState","msg","snackBarMsg","contactServer","setupalerts","setState","useEffect","fetchData","a","fetch","method","headers","body","JSON","stringify","query","response","json","data","console","log","message","alertSetupArr","replace","split","theme","Card","color","style","fontSize","marginLeft","CardHeader","title","textAlign","paddingTop","Table","TableBody","map","row","TableRow","TableCell","Typography","CardContent","float","paddingRight","Snackbar","open","autoHideDuration","onClose","AdvisoryAddComponent","useState","selection","setSelection","nameInput","setNameInput","countries","fetchCountries","length","onAddAdvisoryClicked","tempDate","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","currDate","myHeaders","Headers","append","TextField","label","onChange","e","target","value","Autocomplete","id","options","width","selectedOption","renderInput","params","variant","fullWidth","Button","marginTop","disabled","onClick","AdvisoryListComponent","radioBtnValue","setRadioBtnValue","dataOptions","allTravellers","allAlerts","travellerResponse","alertResponse","travellerJson","alertJson","jp","require","distinctTravellerList","filter","b","indexOf","sort","regionResponse","regionJson","subregionResponse","subregionJson","travellers","alerts","regions","subregions","FormControl","component","RadioGroup","FormControlLabel","control","Radio","labelPlacement","traveller","name","alert","region","subregion","TableHead","align","country","alertText","text","timestamp","Home","App","anchorEl","setAnchorEl","handleClose","AppBar","position","Toolbar","IconButton","event","currentTarget","Menu","Boolean","MenuItem","Link","to","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.a6889eb0.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\nexport default createMuiTheme({\ntypography: {\nuseNextVariants: true\n},\npalette:{\n    \"common\":{\"black\":\"#000\",\"white\":\"#fff\"},\"background\":{\"paper\":\"#fff\",\"default\":\"#fafafa\"},\"primary\":{\"light\":\"rgba(58, 125, 204, 1)\",\"main\":\"rgba(247, 158, 6, 1)\",\"dark\":\"rgba(22, 23, 24, 1)\",\"contrastText\":\"#fff\"},\"secondary\":{\"light\":\"rgba(211, 28, 90, 1)\",\"main\":\"rgba(0, 0, 0, 1)\",\"dark\":\"rgba(126, 211, 33, 1)\",\"contrastText\":\"#fff\"},\"error\":{\"light\":\"#e57373\",\"main\":\"#f44336\",\"dark\":\"#d32f2f\",\"contrastText\":\"#fff\"},\"text\":{\"primary\":\"rgba(0, 0, 0, 0.87)\",\"secondary\":\"rgba(0, 0, 0, 0.54)\",\"disabled\":\"rgba(0, 0, 0, 0.38)\",\"hint\":\"rgba(0, 0, 0, 0.38)\"}\n}\n});","import React, { useReducer, useEffect } from \"react\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Typography,\n  Snackbar,\n  Table,\n  TableRow,\n  TableCell,\n  TableBody\n} from \"@material-ui/core\";\nimport theme from \"./theme\";\nimport \"./../App.css\";\nimport FlightTakeoffIcon from \"@material-ui/icons/FlightTakeoff\";\n\nconst AlertComponent = () => {\n  const initialState = {\n    msg: \"\",\n    snackBarMsg: \"\",\n    contactServer: false,\n    setupalerts: \"\"\n  };\n  const reducer = (state, newState) => ({ ...state, ...newState });\n  const [state, setState] = useReducer(reducer, initialState);\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const fetchData = async () => {\n    try {\n      setState({\n        contactServer: true,\n        snackBarMsg: \"Running setup...\"\n      });\n      //let response = await fetch(\"http://127.0.0.1:5000/setupalerts\");\n      let response = await fetch(\"http://localhost:5000/graphql\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\n        body: JSON.stringify({ query: \"{setupalerts}\" })\n      });\n\n      let json = await response.json();\n      setState({\n        snackBarMsg: \"Alert setup completed\",\n        setupalerts: json.data.setupalerts,\n        contactServer: true\n      });\n    } catch (error) {\n      console.log(error);\n      setState({\n        msg: `Problem running alert setup - ${error.message}`\n      });\n    }\n  };\n  const snackbarClose = () => {\n    setState({\n      contactServer: false,\n      msg: `Alerts loaded`\n    });\n  };\n  //create an array storing strings of each set up step\n  let alertSetupArr = state.setupalerts\n    .replace(/([.])\\s*(?=[A-Z])/g, \"$1|\")\n    .split(\"|\");\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Card>\n        <FlightTakeoffIcon\n          color=\"primary\"\n          style={{\n            fontSize: 100,\n            marginLeft: \"45%\"\n          }}\n        />\n        <CardHeader\n          title=\"Alert Setup - Details\"\n          color=\"inherit\"\n          style={{ textAlign: \"center\", paddingTop: \"10vh\" }}\n        />\n        <Table>\n          <TableBody>\n            {alertSetupArr.map(row => (\n              <TableRow>\n                <TableCell>\n                  <Typography color=\"primary\">{row}</Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <CardContent>\n          <br />\n          <Typography\n            color=\"primary\"\n            style={{ float: \"right\", paddingRight: \"1vh\", fontSize: \"smaller\" }}\n          >\n            &copy;INFO3139 - 2020\n          </Typography>\n        </CardContent>\n      </Card>\n      <Snackbar\n        open={state.contactServer}\n        message={state.snackBarMsg}\n        autoHideDuration={5000}\n        onClose={snackbarClose}\n      />\n    </MuiThemeProvider>\n  );\n};\nexport default AlertComponent;\n","import React, { useState, useReducer, useEffect } from \"react\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Typography,\n  Snackbar,\n  TextField,\n  Button\n} from \"@material-ui/core\";\nimport theme from \"./theme\";\nimport \"./../App.css\";\nimport FlightTakeoffIcon from \"@material-ui/icons/FlightTakeoff\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nconst AdvisoryAddComponent = () => {\n  // using State for traveller's name Input and country selection\n  const [selection, setSelection] = useState(\"\");\n  const [nameInput, setNameInput] = useState(\"\");\n  const onChangeCountry = (e, selectedOption) => {\n    selectedOption ? setSelection(selectedOption) : setSelection(\"\");\n  };\n  const onChangeInputName = e => {\n    setNameInput(e.target.value);\n  };\n\n  const initialState = {\n    msg: \"\",\n    snackBarMsg: \"\",\n    contactServer: false,\n    countries: []\n  };\n  const reducer = (state, newState) => ({ ...state, ...newState });\n  const [state, setState] = useReducer(reducer, initialState);\n  useEffect(() => {\n    fetchCountries();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const fetchCountries = async () => {\n    try {\n      setState({\n        contactServer: true,\n        snackBarMsg: \"Attempting to load countries from server...\"\n      });\n      let response = await fetch(\"http://localhost:5000/graphql\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\n        body: JSON.stringify({ query: `{countries}` })\n      });\n\n      let json = await response.json();\n      setState({\n        countries: json.data.countries,\n        snackBarMsg: `Found ${json.data.countries.length} countries`, //display number of country found\n        contactServer: true\n      });\n    } catch (error) {\n      console.log(error);\n      setState({\n        msg: `Problem running countries setup - ${error.message}`\n      });\n    }\n  };\n  const snackbarClose = () => {\n    setState({\n      contactServer: false\n    });\n  };\n\n  //Add Button Handling\n  const onAddAdvisoryClicked = async () => {\n    //get current timestamp\n    var tempDate = new Date();\n    var date =\n      tempDate.getFullYear() +\n      \"-\" +\n      (tempDate.getMonth() + 1) +\n      \"-\" +\n      tempDate.getDate() +\n      \" \" +\n      tempDate.getHours() +\n      \":\" +\n      tempDate.getMinutes() +\n      \":\" +\n      tempDate.getSeconds();\n    const currDate = \"\" + date;\n    let myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    try {\n      let response = await fetch(\"http://localhost:5000/graphql\", {\n        method: \"POST\",\n        headers: myHeaders,\n        body: JSON.stringify({\n          query: `mutation{posttraveller(name:\"${nameInput}\",country:\"${selection}\",timestamp:\"${currDate}\") {name,country,timestamp}}`\n        })\n      });\n      let json = await response.json();\n      setState({\n        snackBarMsg: `Added advisory on ${currDate} `,\n        contactServer: true\n      });\n    } catch (error) {\n      setState({\n        snackBarMsg: error.message,\n        contactServer: true\n      });\n    }\n    //reset field afer adding advisory\n    setNameInput(\"\");\n    setSelection(\"\");\n  };\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Card>\n        <FlightTakeoffIcon\n          color=\"primary\"\n          style={{\n            fontSize: 100,\n            marginLeft: \"45%\"\n          }}\n        />\n        <CardHeader\n          title=\"Add Advisory\"\n          color=\"inherit\"\n          style={{ textAlign: \"center\", paddingTop: \"10vh\" }}\n        />\n        <CardContent>\n          <TextField\n            label=\"Traveller's Name\"\n            onChange={onChangeInputName}\n            value={nameInput}\n          />\n          <p />\n          <Autocomplete\n            id=\"\"\n            options={state.countries}\n            style={{ width: 300 }}\n            onChange={onChangeCountry}\n            value={selection}\n            renderInput={params => (\n              <TextField\n                {...params}\n                label=\"countries\"\n                variant=\"outlined\"\n                fullWidth\n              />\n            )}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginTop: \"1%\" }}\n            disabled={!nameInput || (selection === \"\" && true)} //disable the add button if name and country are empty\n            onClick={onAddAdvisoryClicked}\n          >\n            Add Advisory\n          </Button>\n        </CardContent>\n        <CardContent>\n          <br />\n          <Typography\n            color=\"primary\"\n            style={{ float: \"right\", paddingRight: \"1vh\", fontSize: \"smaller\" }}\n          >\n            &copy;INFO3139 - 2020\n          </Typography>\n        </CardContent>\n      </Card>\n      <Snackbar\n        open={state.contactServer}\n        message={state.snackBarMsg}\n        autoHideDuration={3000}\n        onClose={snackbarClose}\n      />\n    </MuiThemeProvider>\n  );\n};\nexport default AdvisoryAddComponent;\n","import React, { useState, useReducer, useEffect } from \"react\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Typography,\n  Snackbar,\n  TextField,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  FormControl,\n  FormControlLabel,\n  Radio,\n  RadioGroup\n} from \"@material-ui/core\";\nimport theme from \"./theme\";\nimport \"./../App.css\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport FlightTakeoffIcon from \"@material-ui/icons/FlightTakeoff\";\n\nconst AdvisoryListComponent = () => {\n  // using State for radio button value\n  const [radioBtnValue, setRadioBtnValue] = useState(\"travellers\"); //set default radio button to travellers\n  const [selection, setSelection] = useState(\"\");\n\n  const onChangeListHandler = (e, selectedOption) => {\n    if (selectedOption) {\n      setSelection(selectedOption);\n      //set new Snackbar msg when user select option from traveller/region/susbregion list\n      setState({\n        snackBarMsg: `Found ${\n          radioBtnValue === \"travellers\"\n            ? state.allTravellers.filter(\n                traveller => traveller.name === selectedOption\n              ).length\n            : radioBtnValue === \"regions\"\n            ? state.allAlerts.filter(alert => alert.region === selectedOption)\n                .length\n            : state.allAlerts.filter(\n                alert => alert.subregion === selectedOption\n              ).length\n        } alerts for ${selectedOption}`,\n        contactServer: true\n      });\n    } else {\n      setSelection(\"\");\n    }\n  };\n\n  const onChangeRadioBtn = e => {\n    setRadioBtnValue(e.target.value);\n    setSelection(\"\");\n    fetchData(e.target.value);\n  };\n\n  const initialState = {\n    msg: \"\",\n    snackBarMsg: \"\",\n    contactServer: false,\n    dataOptions: [],\n    allTravellers: [],\n    allAlerts: []\n  };\n  const reducer = (state, newState) => ({ ...state, ...newState });\n  const [state, setState] = useReducer(reducer, initialState);\n  useEffect(() => {\n    fetchData(radioBtnValue);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const fetchData = async radioBtnValue => {\n    try {\n      setState({\n        contactServer: true,\n        snackBarMsg: \"Attempting to load data from server...\"\n      });\n      //load travellers data\n      let travellerResponse = await fetch(\"http://localhost:5000/graphql\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\n        body: JSON.stringify({ query: `{travellers{name,country,timestamp}}` })\n      });\n\n      //load all alert data\n      let alertResponse = await fetch(\"http://localhost:5000/graphql\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\n        body: JSON.stringify({\n          query: `{alerts{name,text,date,region,subregion}}`\n        })\n      });\n\n      let travellerJson = await travellerResponse.json();\n      let alertJson = await alertResponse.json();\n      var jp = require(\"jsonpath\");\n      // get distinct list of travellers (remove duplicate name)\n      let distinctTravellerList = jp\n        .query(travellerJson, \"$.data..name\")\n        .filter(\n          (a, b) => jp.query(travellerJson, \"$.data..name\").indexOf(a) === b\n        )\n        .sort();\n      // get list of regions for selection\n      let regionResponse = await fetch(\"http://localhost:5000/graphql\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\n        body: JSON.stringify({ query: `{regions}` })\n      });\n      let regionJson = await regionResponse.json();\n      // get list of subregions for selection\n      let subregionResponse = await fetch(\"http://localhost:5000/graphql\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\n        body: JSON.stringify({ query: `{subregions}` })\n      });\n      let subregionJson = await subregionResponse.json();\n      //set state depending on radiobutton value\n      if (radioBtnValue === \"travellers\") {\n        setState({\n          dataOptions: distinctTravellerList,\n          snackBarMsg: `Found ${distinctTravellerList.length} travellers`,\n          contactServer: true,\n          allTravellers: travellerJson.data.travellers,\n          allAlerts: alertJson.data.alerts\n        });\n      } else if (radioBtnValue === \"regions\") {\n        setState({\n          dataOptions: regionJson.data.regions,\n          snackBarMsg: `Found ${regionJson.data.regions.length} regions`,\n          contactServer: true,\n          allAlerts: alertJson.data.alerts\n        });\n      } else {\n        setState({\n          dataOptions: subregionJson.data.subregions,\n          snackBarMsg: `Found ${subregionJson.data.subregions.length} subregions`,\n          contactServer: true,\n          allAlerts: alertJson.data.alerts\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      setState({\n        msg: `Problem running travellers setup - ${error.message}`\n      });\n    }\n  };\n  //remove duplicate in the list of travellers\n  const snackbarClose = () => {\n    setState({\n      contactServer: false\n    });\n  };\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Card>\n        <FlightTakeoffIcon\n          color=\"primary\"\n          style={{\n            fontSize: 100,\n            marginLeft: \"45%\"\n          }}\n        />\n        <CardHeader\n          title=\"List Advisories By\"\n          color=\"inherit\"\n          style={{ textAlign: \"center\", paddingTop: \"10vh\" }}\n        />\n        <CardContent>\n          <FormControl component=\"fieldset\">\n            <RadioGroup\n              row // display radio button in a row\n              value={radioBtnValue}\n              onChange={onChangeRadioBtn}\n            >\n              <FormControlLabel\n                value=\"travellers\"\n                control={<Radio />}\n                label=\"Traveller\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                value=\"regions\"\n                control={<Radio />}\n                label=\"Regions\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                value=\"subregions\"\n                control={<Radio />}\n                label=\"Sub-regions\"\n                labelPlacement=\"start\"\n              />\n            </RadioGroup>\n          </FormControl>\n          <p />\n          <Autocomplete\n            options={state.dataOptions}\n            style={{ width: 300 }}\n            onChange={onChangeListHandler}\n            value={selection}\n            renderInput={params => (\n              <TextField\n                {...params}\n                label={radioBtnValue}\n                variant=\"outlined\"\n                fullWidth\n              />\n            )}\n          />\n          <Table>\n            {selection !== \"\" && (\n              <TableHead>\n                <TableRow>\n                  <TableCell>\n                    <Typography color=\"primary\" variant=\"h6\">\n                      Country\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"justify\">\n                    <Typography color=\"primary\" variant=\"h6\">\n                      Alert Information\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n            )}\n            <TableBody>\n              {radioBtnValue === \"travellers\" &&\n                state.allTravellers\n                  .filter(traveller => traveller.name === selection)\n                  .map(row => (\n                    <TableRow>\n                      <TableCell>\n                        <Typography color=\"primary\">{row.country}</Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Typography color=\"primary\">\n                          {state.allAlerts\n                            .filter(alert => alert.name === row.country)\n                            .map(alertText => alertText.text)}\n                          <br />\n                          {row.timestamp}\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              {radioBtnValue === \"regions\" &&\n                state.allAlerts\n                  .filter(\n                    alert => alert.region === selection && selection !== \"\"\n                  )\n                  .map(row => (\n                    <TableRow>\n                      <TableCell>\n                        <Typography color=\"primary\">{row.name}</Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Typography color=\"primary\">\n                          {row.text}\n                          <br />\n                          {row.date}\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              {radioBtnValue === \"subregions\" &&\n                state.allAlerts\n                  .filter(\n                    alert => alert.subregion === selection && selection !== \"\"\n                  )\n                  .map(row => (\n                    <TableRow>\n                      <TableCell>\n                        <Typography color=\"primary\">{row.name}</Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Typography color=\"primary\">\n                          {row.text}\n                          <br />\n                          {row.date}\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n            </TableBody>\n          </Table>\n        </CardContent>\n        <CardContent>\n          <br />\n          <Typography\n            color=\"primary\"\n            style={{ float: \"right\", paddingRight: \"1vh\", fontSize: \"smaller\" }}\n          >\n            &copy;INFO3139 - 2020\n          </Typography>\n        </CardContent>\n      </Card>\n      <Snackbar\n        open={state.contactServer}\n        message={state.snackBarMsg}\n        autoHideDuration={3000}\n        onClose={snackbarClose}\n      />\n    </MuiThemeProvider>\n  );\n};\nexport default AdvisoryListComponent;\n","import React from \"react\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { Card, CardContent, CardHeader, Typography } from \"@material-ui/core\";\nimport theme from \"./theme\";\nimport \"./../App.css\";\nimport FlightTakeoffIcon from \"@material-ui/icons/FlightTakeoff\";\n\nconst Home = () => {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Card>\n        <CardHeader\n          title=\"Travel Alerts\"\n          color=\"inherit\"\n          style={{ textAlign: \"center\", paddingTop: \"10vh\" }}\n        />\n        <FlightTakeoffIcon\n          color=\"primary\"\n          style={{\n            fontSize: 100,\n            marginLeft: \"45%\"\n          }}\n        />\n        <CardContent>\n          <br />\n          <Typography\n            color=\"primary\"\n            style={{ float: \"right\", paddingRight: \"1vh\", fontSize: \"smaller\" }}\n          >\n            &copy;INFO3139 - 2020\n          </Typography>\n        </CardContent>\n      </Card>\n    </MuiThemeProvider>\n  );\n};\nexport default Home;\n","import React, { useState } from \"react\";\nimport { Route, Link, Redirect } from \"react-router-dom\";\nimport Reorder from \"@material-ui/icons/Reorder\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme\";\nimport AlertComponent from \"./alertcomponents\";\nimport AdvisoryAddComponent from \"./advisoryaddcomponent\";\nimport AdvisoryListComponent from \"./advisorylistcomponent\";\nimport Home from \"./home\";\nimport {\n  Toolbar,\n  AppBar,\n  Menu,\n  MenuItem,\n  IconButton,\n  Typography\n} from \"@material-ui/core\";\nconst App = () => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  return (\n    <MuiThemeProvider theme={theme}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">\n            INFO3139 - Case Study #1 - Kiet Nguyen\n          </Typography>\n          <IconButton\n            onClick={handleClick}\n            color=\"inherit\"\n            style={{ marginLeft: \"auto\", paddingRight: \"1vh\" }}\n          >\n            <Reorder />\n          </IconButton>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <MenuItem component={Link} to=\"/home\" onClick={handleClose}>\n              Home\n            </MenuItem>\n            <MenuItem component={Link} to=\"/reset-alert\" onClick={handleClose}>\n              Reset Alerts\n            </MenuItem>\n            <MenuItem component={Link} to=\"/add-advisory\" onClick={handleClose}>\n              Add Advisory\n            </MenuItem>\n            <MenuItem\n              component={Link}\n              to=\"/list-advisory\"\n              onClick={handleClose}\n            >\n              List Advisories\n            </MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n      <div>\n        <Route exact path=\"/\" render={() => <Redirect to=\"/home\" />} />\n        <Route path=\"/reset-alert\" render={() => <AlertComponent />} />\n        <Route path=\"/add-advisory\" render={() => <AdvisoryAddComponent />} />\n        <Route path=\"/list-advisory\" render={() => <AdvisoryListComponent />} />\n        <Route path=\"/home\" component={Home} />\n      </div>\n    </MuiThemeProvider>\n  );\n};\nexport default App;\n","// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import Project1Component from \"./Project1/project1\";\n// import MaterialUIEx2 from \"./Week8/materialuiex2\";\n// import MaterialUIEx3 from \"./Week8/materialuiex3\";\n// import MaterialUIEx4 from \"./Week8/materialuiex4\";\n\n// //ReactDOM.render(<Project1Component />, document.getElementById(\"root\"));\n// ReactDOM.render(<MaterialUIEx4 />, document.getElementById(\"root\"));\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./Project1/App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nrender(\n  <Router>\n    <App />\n  </Router>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}